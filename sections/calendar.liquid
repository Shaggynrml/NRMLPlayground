<style>
 .box-one{
   background:#ededed;
   padding:1em;
 }
.box-two{
   background:#d9d9d9;
   max-height:341px;
   overflow-y: scroll;
 }
.calendar-grid{

}
.container{
   width:100%;
   padding-bottom:20px;
}
.grey-outline{
  background: #e5e5e5
}

.darker-outline{
  background: #d9d9d9
}
.day-mark {
   width: 7px;
   height: 7px;
   background-color: #616161;
   border-radius: 100px;
   position:absolute;
   left: 46%;
   top: 70%;
}

.day-mark:empty{
   display:block;
}

.calendar-content {
   padding: 1.5em;
   overflow: hidden;
}
.content-wrapper {
   padding-top: 50px;
   padding-bottom: 50px;
   margin-left: 300px;
}

.card-img{
   width:60%;
   height:60%;
   margin-right:1em;
}

.event-mark {
   width: 5px;
   height: 5px;
   background-color: #efefef;
   border-radius: 100px;
   position: absolute;
   left: 46%;
   top: 70%;
}

.eventCard {
   color: black;
   padding: 0.5em;
   background-color:#e5e5e5;
   position: relative;
   animation: slideInDown 0.5s;
   margin:0.5em;
   display:flex;
}

.eventCard-header {
   font-weight: bold;
}

.eventCard-description {
   color: grey;
}

.eventCard-mark-wrapper {
   position: absolute;
   right: 0;
   top: 0;
   height: 100%;
   width: 60px;
}

.eventCard-mark {
   width: 8px;
   height: 8px;
   background-color: #b39ddb;
   border-radius: 100px;
   position: absolute;
   left: 50%;
   top: 45%;
}

#table-body .col:hover {
   cursor: pointer;
   /*border: 1px solid grey;*/
   background-color: #E0E0E0;
}

.empty-day:hover {
   cursor: default !important;
   background-color: #fff !important;
   display:block !important;
}
.empty-day:empty{
    display:block
}
#table-body .row .col {
   padding: .75rem;
}

#table-body .col {
   border: 1px solid #252525;
}

#table-body {}

.prev-button {
   cursor: pointer;
   color: grey !important;
}

.prev-button i {
   font-size: 4em;
}

.next-button {
   cursor: pointer;
   color: grey !important;
}

.next-button i {
   font-size: 4em;
}

#table-body .row {
   margin-bottom: 0;
}

#table-body .col {
   padding-top: 1.3rem !important;
   padding-bottom: 1.3rem !important;
}

#calendar-table {
   text-align: center;
}

.col{

}
.row{

}


@media (max-width:767px) {
   .content-wrapper .container {
      width: auto;
   }
   .calendar-content {
      padding-left: 5%;
      padding-right: 5%;
   }
   body .row {
      margin-bottom: 0;
   }
}

@media (max-width:450px) {
   .content-wrapper {
      padding-left: 0;
      padding-right: 0;
   }
   .content-wrapper .container {
      padding-left: 0;
      padding-right: 0;
   }
}

@media (max-width:767px){
   .calendarContainer{
      display:flex;
      flex-direction: column-reverse;
   }
}
</style>





<h2 class= "section-title">  </h2>











<div class= "container ">
  <div class="row calendarContainer">
    <div class="col-12 col-md-4 box-two">
      <div class="sidebar-title">
        <h4>Events</h4>
        <h5 id="eventDayName">Date</h5>
      </div>
      <div class="sidebar-events" id="sidebarEvents">
        <div class="empty-message">Sorry, no releases on selected date</div>
      </div>
    </div>
    <div class="col-12 col-sm-12 col-md-8 box-one calendar-grid">
      <div class="calendar-header">
        <div class="header-text">
          <h5 id="todayDayName">Today is Friday 7 Feb</h5>
        </div>
        <h3 id="month-name">February</h3>
        <a class="prev-button" id="prev">prev</a>
        <a class="next-button" id="next">next</a>
      </div>
      <div class="calendar-content">
        <div id="calendar-table" class="calendar-cells">
          <div id="table-header">
            <div class="row">
              <div class="col">Mon</div>
              <div class="col">Tue</div>
              <div class="col">Wed</div>
              <div class="col">Thu</div>
              <div class="col">Fri</div>
              <div class="col">Sat</div>
              <div class="col">Sun</div>
            </div>
          </div>
          <div id="table-body" class="">
          </div>
        </div>
      </div>
    </div>
  </div>
</div>






<script>
var calendar = document.getElementById("calendar-table");
var gridTable = document.getElementById("table-body");
var currentDate = new Date();
var selectedDate = currentDate;
var selectedDayBlock = null;
var globalEventObj = {};
var articles = {{ section.settings.blog.articles | json }};

var sidebar = document.getElementById("sidebar");

function createCalendar(date, side) {
   var currentDate = date;
   var startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);

   var monthTitle = document.getElementById("month-name");
   var monthName = currentDate.toLocaleString("en-US", {
      month: "long"
   });
   var yearNum = currentDate.toLocaleString("en-US", {
      year: "numeric"
   });
   monthTitle.innerHTML = `${monthName} ${yearNum}`;

   if (side == "left") {
      gridTable.className = "animated fadeOutRight";
   } else {
      gridTable.className = "animated fadeOutLeft";
   }

   setTimeout(() => {
      gridTable.innerHTML = "";

      var newTr = document.createElement("div");
      newTr.className = "row";
      var currentTr = gridTable.appendChild(newTr);

      for (let i = 1; i < (startDate.getDay() || 7); i++) {
         let emptyDivCol = document.createElement("div");
         emptyDivCol.className = " col empty-day";
         currentTr.appendChild(emptyDivCol);
      }

      var lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
      lastDay = lastDay.getDate();

      for (let i = 1; i <= lastDay; i++) {
         if (currentTr.children.length >= 7) {
            currentTr = gridTable.appendChild(addNewRow());
         }
         let currentDay = document.createElement("div");
         currentDay.className = "col";
         if (selectedDayBlock == null && i == currentDate.getDate() || selectedDate.toDateString() == new Date(currentDate.getFullYear(), currentDate.getMonth(), i).toDateString()) {
            selectedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), i);

            document.getElementById("eventDayName").innerHTML = selectedDate.toLocaleString("en-US", {
               month: "long",
               day: "numeric",
               year: "numeric"
            });

            selectedDayBlock = currentDay;
            setTimeout(() => {
               currentDay.classList.add("grey-outline");
               currentDay.classList.add("darker-outline");
            }, 900);
         }
         currentDay.innerHTML = i;

         //show marks
         if (globalEventObj[new Date(currentDate.getFullYear(), currentDate.getMonth(), i).toDateString()]) {
            let eventMark = document.createElement("div");
            eventMark.className = "day-mark";
            currentDay.appendChild(eventMark);
         }

         currentTr.appendChild(currentDay);
      }

      for (let i = currentTr.getElementsByTagName("div").length; i < 7; i++) {
         let emptyDivCol = document.createElement("div");
         emptyDivCol.className = "col empty-day";
         currentTr.appendChild(emptyDivCol);
      }

      if (side == "left") {
         gridTable.className = "animated fadeInLeft";
      } else {
         gridTable.className = "animated fadeInRight";
      }

      function addNewRow() {
         let node = document.createElement("div");
         node.className = "row";
         return node;
      }

   }, !side ? 0 : 270);
}
document.addEventListener("DOMContentLoaded", function() {
  createCalendar(currentDate);
});


var todayDayName = document.getElementById("todayDayName");
todayDayName.innerHTML = "Today is " + currentDate.toLocaleString("en-US", {
   weekday: "long",
   day: "numeric",
   month: "short"
});

var prevButton = document.getElementById("prev");
var nextButton = document.getElementById("next");

prevButton.onclick = function changeMonthPrev() {
   currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1);
   createCalendar(currentDate, "left");
}
nextButton.onclick = function changeMonthNext() {
   currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1);
   createCalendar(currentDate, "right");
}

function addEvent(title, desc) {
   if (!globalEventObj[selectedDate.toDateString()]) {
      globalEventObj[selectedDate.toDateString()] = {};
   }
   globalEventObj[selectedDate.toDateString()][title] = desc;
}

function addReleases(){
 for (var i = 0; i < 50; i++) {
   if (articles[i].tags.includes("%")){
      var releaseDateTag = articles[i].tags.split("%")[1]
      releaseDate = new Date(releaseDateTag)
      if (!globalEventObj[releaseDate.toDateString()]) {
         globalEventObj[releaseDate.toDateString()] = {};
      }
      globalEventObj[releaseDate.toDateString()][articles[i].title] = articles[i];
      console.log(articles[i])
   }
 }
}
addReleases();
function showEvents() {
   let sidebarEvents = document.getElementById("sidebarEvents");
   let objWithDate = globalEventObj[selectedDate.toDateString()];

   sidebarEvents.innerHTML = "";

   if (objWithDate) {
      let eventsCount = 0;
      for (key in globalEventObj[selectedDate.toDateString()]) {
         let eventContainer = document.createElement("div");
         eventContainer.className = "eventCard";

         let eventHeader = document.createElement("div");
         eventHeader.className = "eventCard-header";

         let eventDescription = document.createElement("div");
         eventDescription.className = "eventCard-description";

         let imgArticle = document.createElement('img');
         imgArticle.className = "card-img"

         let eventText = document.createElement("div");

         eventHeader.appendChild(document.createTextNode(key));
         eventText.appendChild(eventHeader);

         eventDescription.innerHTML = objWithDate[key].body_html;
         eventText.appendChild(eventDescription)

         imgArticle.src = objWithDate[key].image.src
         
         eventContainer.appendChild(imgArticle)
         eventContainer.appendChild(eventText)

         let markWrapper = document.createElement("div");
         markWrapper.className = "eventCard-mark-wrapper";
         let mark = document.createElement("div");
         mark.classList = "eventCard-mark";
         markWrapper.appendChild(mark);
         eventContainer.appendChild(markWrapper);

         sidebarEvents.appendChild(eventContainer);

         eventsCount++;
      }

   } else {
      let emptyMessage = document.createElement("div");
      emptyMessage.className = "empty-message";
      emptyMessage.innerHTML = "Sorry, no events to selected date";
      sidebarEvents.appendChild(emptyMessage);
   }
}

gridTable.onclick = function (e) {

   if (!e.target.classList.contains("col") || e.target.classList.contains("empty-day")) {
      return;
   }
    

   if (selectedDayBlock) {
      if (selectedDayBlock.classList.contains("grey-outline") && selectedDayBlock.classList.contains("darker-outline")) {
         selectedDayBlock.classList.remove("grey-outline");
         selectedDayBlock.classList.remove("darker-outline");
      }
   }
   selectedDayBlock = e.target;
   selectedDayBlock.classList.add("grey-outline");
   selectedDayBlock.classList.add("darker-outline");

   selectedDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), parseInt(e.target.innerHTML));

   showEvents();

   document.getElementById("eventDayName").innerHTML = selectedDate.toLocaleString("en-US", {
      month: "long",
      day: "numeric",
      year: "numeric"
   });

}





  
   showEvents();

  if (selectedDayBlock && !selectedDayBlock.querySelector(".day-mark")) {
    selectedDayBlock.appendChild(document.createElement("div")).className = "day-mark";
  }



</script>
{% schema %}
{
  "name": "Release Calendar",
  "tag": "section",
  "class": "section",
  "settings": [
       {
      "type": "blog",
      "id": "blog",
      "label": "t:sections.featured-blog.settings.blog.label"
    }
  ],
  "presets": [
            {
            "name": "Release Calendar"
            }
        ]
}
{% endschema %}